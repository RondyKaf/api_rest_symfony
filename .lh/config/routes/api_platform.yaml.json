{
    "sourceFile": "config/routes/api_platform.yaml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1688770756192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1688770766254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n nelmio_api_doc:\n     documentation:\n         info:\n             title: Books\n-                description: Une API d'OpenClassrooms avec des livres, des autrices et des auteurs !\n+            description: Une API d'OpenClassrooms avec des livres, des autrices et des auteurs !\n             version: 2.0.0\n paths:\n     /api/login_check:\n         post:\n"
                },
                {
                    "date": 1688770777105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,28 +3,28 @@\n         info:\n             title: Books\n             description: Une API d'OpenClassrooms avec des livres, des autrices et des auteurs !\n             version: 2.0.0\n-paths:\n-    /api/login_check:\n-        post:\n-            operationId: postCredentialsItem\n-            tags:\n-                - Token\n-            summary: Permet d'obtenir le token JWT pour se logger.\n-            requestBody:\n-                description: Crée un nouveau token JWT\n-                content:\n-                    application/json:\n-                        schema:\n-                            $ref: '#/components/schemas/Credentials'\n-            responses:\n-                '200':\n-                    description: Récupère le token JWT\n+    paths:\n+        /api/login_check:\n+            post:\n+                operationId: postCredentialsItem\n+                tags:\n+                    - Token\n+                summary: Permet d'obtenir le token JWT pour se logger.\n+                requestBody:\n+                    description: Crée un nouveau token JWT\n                     content:\n                         application/json:\n                             schema:\n-                                $ref: '#/components/schemas/Token'\n+                                $ref: '#/components/schemas/Credentials'\n+                responses:\n+                    '200':\n+                        description: Récupère le token JWT\n+                        content:\n+                            application/json:\n+                                schema:\n+                                    $ref: '#/components/schemas/Token'\n         components:\n             schemas:\n                 Token:\n                     type: object\n"
                },
                {
                    "date": 1688770788758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n                         content:\n                             application/json:\n                                 schema:\n                                     $ref: '#/components/schemas/Token'\n-        components:\n+    components:\n             schemas:\n                 Token:\n                     type: object\n                     properties:\n"
                },
                {
                    "date": 1688770795944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n                         content:\n                             application/json:\n                                 schema:\n                                     $ref: '#/components/schemas/Token'\n-    components:\n+            components:\n             schemas:\n                 Token:\n                     type: object\n                     properties:\n"
                },
                {
                    "date": 1688770821766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n                         content:\n                             application/json:\n                                 schema:\n                                     $ref: '#/components/schemas/Token'\n-            components:\n+            -components:\n             schemas:\n                 Token:\n                     type: object\n                     properties:\n"
                },
                {
                    "date": 1688770862459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,51 +3,51 @@\n         info:\n             title: Books\n             description: Une API d'OpenClassrooms avec des livres, des autrices et des auteurs !\n             version: 2.0.0\n-    paths:\n-        /api/login_check:\n-            post:\n-                operationId: postCredentialsItem\n-                tags:\n-                    - Token\n-                summary: Permet d'obtenir le token JWT pour se logger.\n-                requestBody:\n-                    description: Crée un nouveau token JWT\n+paths:\n+    /api/login_check:\n+        post:\n+            operationId: postCredentialsItem\n+            tags:\n+                - Token\n+            summary: Permet d'obtenir le token JWT pour se logger.\n+            requestBody:\n+                description: Crée un nouveau token JWT\n+                content:\n+                    application/json:\n+                        schema:\n+                            $ref: \"#/components/schemas/Credentials\"\n+            responses:\n+                \"200\":\n+                    description: Récupère le token JWT\n                     content:\n                         application/json:\n                             schema:\n-                                $ref: '#/components/schemas/Credentials'\n-                responses:\n-                    '200':\n-                        description: Récupère le token JWT\n-                        content:\n-                            application/json:\n-                                schema:\n-                                    $ref: '#/components/schemas/Token'\n-            -components:\n-            schemas:\n-                Token:\n-                    type: object\n-                    properties:\n-                        token:\n-                            type: string\n-                            readOnly: true\n-                Credentials:\n-                    type: object\n-                    properties:\n\\ No newline at end of file\n-                        username:\n-                            type: string\n-                            default: admin@bookapi.com\n-                        password:\n-                            type: string\n-                            default: password\n-            securitySchemes:\n-                bearerAuth:\n-                    type: apiKey\n-                    in: header\n-                    name: Authorization # or another header name\n-        security:\n-            - bearerAuth: []\n-    areas: # to filter documented areas\n-        path_patterns:\n-            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc\n+                                $ref: \"#/components/schemas/Token\"\n+    components:\n+        schemas:\n+            Token:\n+                type: object\n+                properties:\n+                    token:\n+                        type: string\n+                        readOnly: true\n+            Credentials:\n+                type: object\n+                properties:\n+                    username:\n+                        type: string\n+                        default: admin@bookapi.com\n+                    password:\n+                        type: string\n+                        default: password\n+        securitySchemes:\n+            bearerAuth:\n+                type: apiKey\n+                in: header\n+                name: Authorization # or another header name\n+    security:\n+        - bearerAuth: []\n+areas: # to filter documented areas\n+    path_patterns:\n+        - ^/api(?!/doc$) # Accepts routes under /api except /api/doc\n"
                }
            ],
            "date": 1688770756192,
            "name": "Commit-0",
            "content": "nelmio_api_doc:\n    documentation:\n        info:\n            title: Books\n                description: Une API d'OpenClassrooms avec des livres, des autrices et des auteurs !\n            version: 2.0.0\npaths:\n    /api/login_check:\n        post:\n            operationId: postCredentialsItem\n            tags:\n                - Token\n            summary: Permet d'obtenir le token JWT pour se logger.\n            requestBody:\n                description: Crée un nouveau token JWT\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Credentials'\n            responses:\n                '200':\n                    description: Récupère le token JWT\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Token'\n        components:\n            schemas:\n                Token:\n                    type: object\n                    properties:\n                        token:\n                            type: string\n                            readOnly: true\n                Credentials:\n                    type: object\n                    properties:\n                        username:\n                            type: string\n                            default: admin@bookapi.com\n                        password:\n                            type: string\n                            default: password\n            securitySchemes:\n                bearerAuth:\n                    type: apiKey\n                    in: header\n                    name: Authorization # or another header name\n        security:\n            - bearerAuth: []\n    areas: # to filter documented areas\n        path_patterns:\n            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc"
        }
    ]
}